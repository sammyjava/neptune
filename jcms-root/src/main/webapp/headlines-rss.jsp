<%@ page contentType="application/rss+xml; charset=UTF-8" language="java" %><%@ page import="net.ims.jcms.*, java.sql.Date, java.util.*, java.text.*" %><?xml version="1.0" encoding="UTF-8"?><%

  // overall site settings
  String siteName = Setting.getString(application, "site_name");
  String copyrightText = Setting.getString(application, "site_copyrighttext");
  String siteHost = request.getServerName()+application.getContextPath();

  // get time zone and locale from web.xml parameters
  String timezone = DB.getTimeZone(application);
  String siteLanguage = application.getInitParameter("site.language");
  String siteCountry = application.getInitParameter("site.country");

  // site time zone, for formatting, etc.
  TimeZone tz = TimeZone.getTimeZone(timezone);

  // site locale, used various places, set in web.xml
  Locale locale = null;
  if (siteLanguage==null) {
    locale = Locale.getDefault();
  } else if (siteCountry==null) {
    locale = new Locale(siteLanguage);
  } else {
    locale = new Locale(siteLanguage, siteCountry);
  }

  // format for displaying dates in RSS
  SimpleDateFormat dateFormat = new SimpleDateFormat(Setting.getString(application,"calendar_date_format"), locale);

  // format for passing today's date
  SimpleDateFormat todayFormat = new SimpleDateFormat("yyyy-MM-dd");

  // get today
  Calendar calendar = Calendar.getInstance(tz, locale); // dates
  String today = todayFormat.format(calendar.getTime());

  // instantiate the default access user
  AccessUser au = Util.getDefaultAccessUser(application); // default user (public)
  // instantiate from the session, if stored
  if (au.isDefault() && session.getAttribute("AccessUser")!=null) au = (AccessUser)session.getAttribute("AccessUser");

  // use SSL host for SSL nodes
  String sslHost = Setting.getString(application, "site_sslhost");

  // get headlines settings, determine if description is shown or not
  boolean showDescription = Setting.getBoolean(application, "headlines_showdescription");
  String readMore = Setting.getString(application, "headlines_readmore");
  boolean showPageTitle = Setting.getBoolean(application, "headlines_showpagetitle");
  boolean showHidden = Setting.getBoolean(application, "headlines_showhidden");

  // disable access calls if not in use
  boolean accessEnabled = AccessRole.nodeCount(application)>0;

  // the parent_nid passed is the parent of the displayed node headlines.
  int parent_nid = Util.getInt(request, "parent_nid");
  if (parent_nid==0) {
    out.print("You must supply a parent node id value to the headlines.jsp extra, for example /headlines.jsp?parent_nid=1234");
    return;
  }

  Node parent = new Node(application, parent_nid);
  NodeLink parentNodeLink = parent.getCurrentNodeLink(application);
  String title = siteName+" "+parent.nodename;
  String description = title+" headlines";
%>
<!-- RSS generated by <%=siteName%> on <%=today%> -->
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title><%=Util.rssClean(title)%></title>
    <description><%=Util.rssClean(description)%></description>
    <link>http://<%=request.getServerName()%><%=application.getContextPath()%><%=parent.url%></link>
    <atom:link href="http://<%=siteHost%>/headlines-rss.jsp?parent_nid=<%=parent_nid%>" rel="self" type="application/rss+xml"/>
    <language><%=locale.getLanguage()%>-<%=locale.getCountry()%></language>
    <copyright>Copyright <%=calendar.get(Calendar.YEAR)%> <%=Util.rssClean(copyrightText)%></copyright>
    <generator>IMS Neptune</generator>
    <%
      boolean hasChildren = false;
      if (showHidden) {
        hasChildren = parent.hasChildren(application);
      } else {
        hasChildren = parent.hasVisibleChildren(application);
      }
      if (hasChildren) {
        NodeListIterator parentIterator = parent.getNodeListIterator(application);
        while (parentIterator.hasNext()) {
          Node child = parentIterator.nextNode();
          String url = null;
          boolean showChild = false;
          if (showHidden) {
            showChild = child.active && (!accessEnabled || au.mayAccess(application, child));
          } else {
            showChild = child.isVisible() && (!accessEnabled || au.mayAccess(application, child));
          }
          if (showChild) {
            if (child.ssl) {
              url = "https://"+sslHost+application.getContextPath()+"/"+child.url;
            } else {
              url = "http://"+request.getServerName()+application.getContextPath()+child.url;
            }
            title = child.nodename;
            description = null;
            NodeLink childNodeLink = child.getCurrentNodeLink(application);
            if (childNodeLink.isPage()) {
              Page p = childNodeLink.getPage(application);
              title = p.title;
              description = p.metadescription;
            }
    %>
    <item>
      <title><%=Util.rssClean(title)%></title>
      <% if (description!=null) { %><description><%=Util.rssClean(description)%></description><% } %>
      <link><%=url%></link>
      <guid isPermaLink="true"><%=url%></guid>
    </item>
    <%
    } // showChild
  } // hasNext
} // hasChildren
    %>
  </channel>
</rss>
